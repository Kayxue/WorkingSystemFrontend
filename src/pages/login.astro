---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.solid.jsx';
---

<Layout title="WorkNow - 登入">
  <Navbar client:load />
  <main class="login-page">
    <div class="login-container">
      <h1>登入 WorkNow</h1>
      <form id="loginForm">
        <div class="form-group">
          <label for="email">電子郵件</label>
          <input type="email" id="email" name="email" required />
        </div>
        <div class="form-group">
          <label for="password">密碼</label>
          <input type="password" id="password" name="password" required />
        </div>
        <div class="form-group">
          <label>登入身份</label>
          <div class="role-options">
            <label for="role-business">
              <input type="radio" id="role-business" name="role" value="business" checked />
              商家
            </label>
            <label for="role-admin">
              <input type="radio" id="role-admin" name="role" value="admin" />
              管理員
            </label>
          </div>
        </div>
        <button type="submit" class="btn-submit">登入</button>
      </form>
      <p class="register-link">
        還沒有帳號嗎？ <a href="/register">立即註冊</a>
      </p>
    </div>
  </main>
</Layout>

<style>
  .login-page {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - var(--navbar-height) - 70px); /* Adjust 70px based on footer height if any */
    padding: 2rem var(--padding-inline);
  }
  .login-container {
    background-color: #fff;
    padding: 2.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    width: 100%;
    max-width: 420px;
    text-align: center;
  }
  .login-container h1 {
    margin-bottom: 1.5rem;
    color: #333;
    font-size: 1.8rem;
  }
  .form-group {
    margin-bottom: 1.25rem;
    text-align: left;
  }
  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: #555;
    font-weight: 500;
  }
  .form-group input[type="email"],
  .form-group input[type="password"] {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    font-size: 1rem;
  }
  .role-options {
    display: flex;
    gap: 1rem;
    margin-top: 0.5rem;
  }
  .role-options label {
    display: flex;
    align-items: center;
    gap: 0.3rem;
    font-weight: normal;
  }
  .btn-submit {
    width: 100%;
    padding: 0.85rem;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-top: 0.5rem;
  }
  .btn-submit:hover {
    background-color: #0056b3;
  }
  .register-link {
    margin-top: 1.5rem;
    font-size: 0.9rem;
    color: #555;
  }
  .register-link a {
    color: #007bff;
    text-decoration: none;
  }
  .register-link a:hover {
    text-decoration: underline;
  }
</style>

<script>
  // Basic form submission handling (client-side)
  // In a real application, you would send this data to a server for authentication.
  const loginForm = document.getElementById('loginForm');
  if (loginForm) {
    loginForm.addEventListener('submit', function(event) {
      event.preventDefault(); // Prevent default form submission
      const email = (document.getElementById('email') as HTMLInputElement).value;
      const password = (document.getElementById('password') as HTMLInputElement).value;
      const selectedRole = (document.querySelector('input[name="role"]:checked') as HTMLInputElement).value;

      // TODO: Implement actual login logic here
      // For example, send a request to your backend API
      console.log('Login attempt:', { email, password, role: selectedRole });
      alert(`登入嘗試：\n電子郵件: ${email}\n身份: ${selectedRole}\n(此為前端演示，實際登入邏輯需後端實現)`);
      
      // Example: Redirect after successful login (replace with actual logic)
      // if (loginSuccessful) {
      //   window.location.href = '/'; 
      // }
    });
  }
</script> 