---
import Layout from '../../layouts/Layout.astro';
import JobDetailsPage from '../../components/JobDetailsPage.solid.tsx';
const { gigId } = Astro.params;


function validateGigId(id: string | undefined): string | null {
  if (!id || id === '[object Object]' || typeof id !== 'string') {
    console.error('Invalid gigId detected:', {
      gigId: id,
      type: typeof id,
      url: Astro.url.href,
      referer: Astro.request.headers.get('referer')
    });
    return null;
  }

  const idPattern = /^[a-zA-Z0-9_-]+$/;
  if (!idPattern.test(id)) {
    console.error('gigId format invalid:', id);
    return null;
  }

  return id;
}

const validatedGigId = validateGigId(gigId);

// Early return for invalid IDs
if (!validatedGigId) {
  const errorMessage = gigId ? `Invalid job ID format: "${gigId}"` : 'Invalid job ID';

  return new Response(`
    <html>
      <head><title>Invalid Job ID</title></head>
      <body style="font-family: system-ui, sans-serif; padding: 2rem; text-align: center;">
        <h1>Invalid Job ID</h1>
        <p>${errorMessage}</p>
        <p><strong>Debug Info:</strong></p>
        <p>URL: ${Astro.url.href}</p>
        <p>Referer: ${Astro.request.headers.get('referer') || 'None'}</p>
        <p>Please check the URL and try again.</p>
        <button onclick="window.location.href='/dashboard'" style="background: #007acc; color: white; border: none; padding: 1rem 2rem; border-radius: 4px; cursor: pointer; font-size: 1rem;">← Back to dashboard</button>
      </body>
    </html>
  `, {
    status: 400,
    headers: { 'Content-Type': 'text/html' }
  });
}

const pageTitle = `Job Details | WorkNow`;
---

<Layout title={pageTitle}>
  <main class="job-details-page">
    <div class="job-details-container">
      <!-- ✅ Only load this Solid component on the client -->
      <JobDetailsPage client:only="solid" gigId={validatedGigId} />
    </div>
  </main>
</Layout>

<style>
  .job-details-page {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    min-height: calc(100vh - var(--navbar-height));
    padding: 2rem var(--padding-inline);
    background-color: #f5f5f5;
  }

  .job-details-container {
    background-color: #fff;
    padding: 2.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    width: 100%;
    max-width: 1000px;
  }
</style>
